---
title: "MTB3 Entwicklung mechatronischer Systeme 1"
format:
  html:
    embed-resources: true

author:
  - name: "Christian Anders"
    email: christian.anders@hs-esslingen.de
    affiliations: Hochschule Esslingen
date: last-modified
toc: false
number-sections: false
scrollable: true
---

<!-- -------------------------------------------------------------------------

                       Callout !!! WARNING !!!

-------------------------------------------------------------------------- -->
::: {.callout-warning}
## WARNING!
**THIS DOCUMENT IS STILL WORK IN PROGRESS!!!**
:::

<!-- -------------------------------------------------------------------------

                        ENTWURFS- UND ENTWICKLUNGSPHASE

-------------------------------------------------------------------------- -->

# Entwurfs- und Entwicklungsphase

In diesem Kapitel geht es um die Entwurfs- und Entwicklungsphase im Produktentstehungsprozess. Die Entwurfs- und Entwicklungsphase bildet zusammen mit der Phase des Protoyping und Test den Schwerpunkt dieser Vorlesung.


::: {.callout-caution}
*"Solange nicht absolut sicher ist, dass ein Produkt richtig ausgelegt ist, ist es sicher nicht richtig ausgelegt."*
:::


> *"Every great developer you know got there by solving problems they were unqualified to solve until they actually did it."*


<!-- -------------------------------------------------------------------------

                        Bauteildaten

-------------------------------------------------------------------------- -->

## Produktdaten

Woraus bestehen Bauteildaten eigentlich?

<!-- -------------------------------------------------------------------------

                        Spezifikation und Vorgaben

-------------------------------------------------------------------------- -->
### Spezifikation und Vorgaben

+ **Technische Spezifikationen**: Diese umfassen detaillierte Angaben zu den Anforderungen und Leistungsmerkmalen des Produkts, einschließlich Maßtoleranzen, Materialanforderungen, Betriebsbedingungen, Sicherheitsstandards usw. Die technische Spezifikation ist im Lasten-/Pflichtenheft dokumentiert.

+ **Regulatorische Daten und Vorgaben zur Compliance**: Daten zu gesetzlichen Vorschriften, Normen und Standards, die das Produkt erfüllen muss, sowie entsprechende Zertifizierungs- und Genehmigungsverfahren.

<!-- -------------------------------------------------------------------------

                        Sachnummer

-------------------------------------------------------------------------- -->
### Sachnummer

::: {.callout-tip}
## Definition: *"Sachnummer"*
Eine Sachnummer ist eine eindeutige Kennzeichnung oder Nummerierung, die einem bestimmten Produkt, einer Komponente, einem Bauteil oder einem Material zugeordnet wird.
::: 

Sachnummer dienen dazu, das Produkt oder die Komponente eineindeutig zu identifizieren und zu verfolgen. Sachnummern können je nach Unternehmen und Branche unterschiedlich strukturiert sein. Oft enthalten sie Informationen wie den Produkttyp, die Version, die Serie, den Hersteller, das Herstellungsdatum und andere relevante Merkmale. Sachnummern werden in Stücklisten, aber auch als Referenz in anderen Dokumenten wie technischen Zeichnungen, Bestellungen und Lieferungen verwendet werden.

Durch die Verwendung von Sachnummern können Unternehmen Produkte und Komponenten eindeutig identifizieren, verwalten, nachverfolgen und inventarisieren können. Die Vergabe und Verwaltung von Sachnummern stellt eine zentrale Aufgabe im Produktentstehungsprozess dar. Für die Vergabe von Sachnummern nutzen große Unternehmen häufig eigene Softwarewerkzeuge, wie z.B. ein Sachnummer-Recherche-Management (SRM)

<!-- -------------------------------------------------------------------------

                        Produktstruktur

-------------------------------------------------------------------------- -->
+ **Produktstruktur**:

::: {.callout-tip}
## Definition: *"Produktstruktur"*
Die Produktstruktur ist hierarchische Organisation und Strukturierung eines Produkts in seine einzelnen Baugruppen, Komponenten und Teile, die notwendig sind, um das Produkt zu definieren, zu entwerfen, herzustellen und zu montieren. Die Produktstruktur legt die Beziehungen und Abhängigkeiten zwischen den einzelnen Elementen fest und bildet die Grundlage für die gesamte Produktentwicklung, -herstellung und -wartung."
:::

Die Produktstruktur umfasst die logische Aufteilung des Produkts in seine funktionalen Einheiten sowie die Zuordnung von Materialien, Maßen, Toleranzen, Montageanweisungen und anderen relevanten Informationen zu den entsprechenden Baugruppen und Teilen. Sie dient als zentrales Dokument zur Definition des Produkts und bietet eine klare Darstellung seiner physischen und funktionalen Eigenschaften. Die Produktstruktur wird oft in Form von Stücklisten (Bill of Materials) oder hierarchischen Baumstrukturen dargestellt und ist ein wesentlicher Bestandteil des Produktlebenszyklusmanagements.

```{mermaid}
%%| fig-width: 6.4
%%| label: fig-label-produktstruktur
%%| fig-cap: "Beispiel für eine unvollständige Struktur eines Produkts in Hauptmodule - Module - Submodule. Bei Produkt und Moduelen handelt es sich in der Regel um Zusammenbauten (Assemblies), bei den Submodulen um Einzelteile (Parts)."
flowchart LR
  id1[Produkt] --> id2[# Hauptmodul 1]
  id1 --> id5[# Hauptmodul 2]
  id1 --> id6[# Hauptmodul n]
  id2 --> id3[## Modul 1.1]
  id2 --> id7[## Modul 1.2]
  id2 --> id9[## Modul 1.n]
  id3 --> id4[### Submodul 1.1.1]
  id3 --> id8[### Submodul 1.1.2]
  id3 --> id10[### Submodul 1.1.n]
  id5 --> id11[## Modul 2.n]
  id7 --> id12[### Submodul 1.2.n]
 ```


1. **Logische Aufteilung in Baugruppen und Teile:** Strukturieren Sie das Produkt in Baugruppen (Assemblies) und Einzelteile (Parts), um eine übersichtliche Hierarchie zu schaffen. Gruppieren Sie ähnliche Teile oder solche, die zusammenarbeiten, in Baugruppen, um eine einfachere Bearbeitung und Analyse zu ermöglichen.

2. **Klare Benennung und Nummerierung:** Verwenden Sie ein konsistentes Benennungs- und Nummerierungsschema für Baugruppen und Teile, um eine einfache Identifizierung zu ermöglichen. Dies kann durch die Verwendung von benutzerdefinierten Eigenschaften und Metadaten in der CAD-Software erreicht werden.

3. **Verwendung von Referenzen:** Nutzen Sie Verweise oder externe Beziehungen zwischen Baugruppen und Teilen, um eine konsistente Montagestruktur zu gewährleisten. Dies erleichtert auch die Aktualisierung von Teilen, wenn Änderungen vorgenommen werden.

4. **Saubere Geometrie und Modellierung:** Achten Sie darauf, dass die Geometrie der Baugruppen und Teile sauber modelliert ist, ohne Überlappungen, ungewollte Löcher oder unerwünschte Geometrien. Dies erleichtert die spätere Bearbeitung und Verwendung des Modells.

5. **Standardisierung von Komponenten:** Verwenden Sie standardisierte Bauteile und Bibliotheken, um Zeit zu sparen und die Konsistenz zu verbessern. Dies kann auch die Interoperabilität mit anderen Systemen und CAD-Software verbessern.

6. **Dokumentation und Metadaten:** Ergänzen Sie das CAD-Modell mit relevanten Dokumentationen und Metadaten, wie z. B. technischen Zeichnungen, Stücklisten, Materialspezifikationen usw., um eine umfassende Produktinformation bereitzustellen.

7. **Überprüfung und Revision:** Führen Sie regelmäßige Überprüfungen des CAD-Modells durch, um Fehler oder Inkonsistenzen zu identifizieren und zu beheben. Stellen Sie sicher, dass Änderungen dokumentiert und nachverfolgt werden, um die Revisionssicherheit zu gewährleisten.

8. **Kompatibilität und Zusammenarbeit:** Berücksichtigen Sie die Kompatibilität mit anderen CAD-Systemen und die Möglichkeit der Zusammenarbeit mit anderen Teammitgliedern. Verwenden Sie geeignete Dateiformate und Standards, um den Austausch von Daten zu erleichtern.

Durch eine strukturierte und systematische Herangehensweise an die Modellierung von technischen Produkten in CAD können Effizienz, Genauigkeit und Konsistenz verbessert werden, was letztendlich zu besseren Produkten führt.


![Alt text](images/DaimlerChrysler_PEP_2002.png)

<!-- -------------------------------------------------------------------------

                        CAD-Daten.

-------------------------------------------------------------------------- -->

+ **CAD-Daten**: CAD-Daten (Computer-Aided Design) umfassen 2D- und 3D-Modelle des Produkts. Die Daten können im nativen Datenformat des jeweils genugzten CAD-Systems und auch tesseliert vorliegen.
+ **Stückliste**: Die Stückliste (Bill of Materials, BoM) ist detaillierte Auflistung aller Baugruppen die für die Herstellung des Produkts benötigt werden, einschließlich ihrer Stückzahlen. Die Stückliste ist der grundlegende Datensatz für Kostenrechnung, Logistik und Beschaffung im Produktentstehungsprozess und weit darüber hinaus.

::: {.callout-warning}
## Abweichungen bei der Datenstruktur von CAD-Daten und Stückliste sind eine mögliche Fehlerquelle!
Die Struktur der CAD-Daten und die Struktur der Stückliste muss nicht zwingend übereinstimmen. So kann die Struktur der CAD-Daten die Konstruktionssicht, die Struktur der Stückliste die Produktionssicht oder die Sicht der Logistik wiederspiegeln. Stimmt die Struktur der CAD-DAten und die Struktur der Stückliste NICHT überein ist hohe Aufmerksamkeit erfoderlich, um eine inhaltliche Übereinstimmung der verschiedenen Sichten auf das Produkt sicherzustellen.
:::

+ **Zeichnungen**: Detaillierte technische Zeichnungen, die überwiegend zur Herstellung der Bauteile verwendet werden. Die Zeichnungen enthalten insbesondere Angaben zu Werkstoffen Maßen und Toleranzen. Auch Fertigungsabschnittszeichnungen gehören mit zu den Zeichnungen.

+ **Bauteilmappe**: Enthält wichtige Daten zum Bauteil, die nicht in den CAD-Daten oder den Zeichnungen enthalten sind, z.B. Grenzmuster zu Oberflächen, Rissbildung, Restschmutz, usw.

<!-- -------------------------------------------------------------------------

                        3D-Master

-------------------------------------------------------------------------- -->
{{< include 3DMaster.qmd >}}


Bei mechatronischen Produkten 

+ Software

<!-- -------------------------------------------------------------------------

                        3D-Master

-------------------------------------------------------------------------- -->
+ **Firmware**:

::: {.callout-tip}
## Definition: *"Produktstruktur"*
"Firmware ist eine spezielle Art von Software, die in elektronischen Geräten und eingebetteten Systemen verwendet wird, um die grundlegende Funktionalität und Steuerung dieser Geräte zu ermöglichen. Firmware bietet eine Schnittstelle zwischen der Hardware des Geräts und der höheren Softwareebene, die auf dem Gerät ausgeführt wird, und ist oft eng mit der Hardwarearchitektur verbunden, um optimale Leistung und Sicherheit zu gewährleisten."
:::

Im Gegensatz zur Software, die auf CPUs oder GPUs in Computern ausgeführt wird und vom Benutzer gesteuert wird, ist Firmware in den Speicherbausteinen oder integrierten Schaltkreisen des Geräts gespeichert und wird normalerweise nicht verändert oder aktualisiert, es sei denn, es liegt eine spezifische Aktualisierung vor. Das Update der Firmware erfordert zumeist eine Unterbrechung des Betriebs und einen Neustart des Geräts oder des eingebetteten Systems. 

<!-- -------------------------------------------------------------------------

                        Daten aus dem Produktentstehungsprozesses

-------------------------------------------------------------------------- -->

Die Dokumentation des Produktentstehungsprozesses sollte darüber hinaus umfassen:

+ **Simulationsdaten**: Daten aus computergestützten Simulationen, die zur Analyse und Optimierung verschiedener Produktaspekte wie Struktur, Aerodynamik, Wärmeübertragung usw. verwendet wurden.

+ **Testergebnisse und Protokolle** : Daten aus verschiedenen Testverfahren, einschließlich Labortests, Prototypentests, Crashtests usw., die die Leistung und Zuverlässigkeit des Produkts bewerten.

+ **Qualitätsdaten**: Daten zur Qualitätskontrolle und -sicherung, einschließlich Prüfprotokolle, Inspektionsberichte, Fehleranalysen usw.


<!-- -------------------------------------------------------------------------

                        Computer Aided Design (CAD)

-------------------------------------------------------------------------- -->


## CAD

Hier einen kurzen Beitrag zu CAD einfügen, aber nicht auf Details eingehen. CAD-Werkzeuge sind heute State-of-the-Art und brauchen nicht mehr diskutiert zu werden. An dieser Stelle sei der geneigte Leser auf das breite Spektrum an kommerziellen und frei verfügbaren Softwarewerkzeuge verwiesen. 

Einige in der Praxis relevante Elemente sollen hier kurz genannt werden: 1. Featurebasierte Konstruktion, 2. Powerfeatures

### Featurebasierte Konstruktion
Die featurebasierte Konstruktion ist eine Methode in der technischen Zeichnung und Computer-Aided Design (CAD), bei der ein Produkt oder eine Komponente durch das Hinzufügen oder Entfernen von "Features" oder Merkmalen erstellt wird. Ein Feature ist ein geometrisches Element oder eine Form, das oder die bestimmte Eigenschaften oder Funktionen repräsentiert. Diese Features können einfache geometrische Formen wie Zylinder, Kugeln, Aussparungen, Rippen oder komplexe Strukturen sein, die in der CAD-Software modelliert werden.

- Features können zusätzlich Informationen zur Herstellung der Features (z.B. Werkzeuge, Prozesszeiten, à KOSTEN, aber auch Qualitätsmerkmale) hinterlegt werden. So können wichtige Informationen für den Konstrukteur bereits in der Entwicklungsphase zugänglich gemacht werden. 
- Features bilden eine wichtige Grundlage zur Standardisierung von Produkten und helfen, die Konstruktion zu beschleunigen.
- In der Fertigung und Qualitätssicherung können z.B. Messprogramme, NC-Programme usw. direkt aus den Features abgeleitet werden!

Die featurebasierte Konstruktion ermöglicht es Ingenieuren und Konstrukteuren, ein Produkt schrittweise zu entwickeln, indem sie nacheinander verschiedene Features hinzufügen, bearbeiten oder löschen. Jedes Feature hat spezifische Parameter und Abhängigkeiten zu anderen Features, die es ermöglichen, komplexe Baugruppen und Modelle zu erstellen.

Die Vorteile der featurebasierten Konstruktion in CAD-Systemen sind unter anderem:

1\. Modularität: Durch die Verwendung von Features können Konstrukteure Modelle erstellen, die aus wiederverwendbaren Bausteinen bestehen. Dies erleichtert die Aktualisierung und Anpassung von Designs.

2\. Fehlerreduktion: Da die Konstruktion schrittweise erfolgt und jede Änderung sofort Auswirkungen auf andere Features hat, können Fehler frühzeitig erkannt und korrigiert werden.

3\. Effizienz: Featurebasierte Konstruktion beschleunigt den Entwurfsprozess und erleichtert die Automatisierung von wiederholten Aufgaben.

4\. Designvarianten: Es ist einfacher, verschiedene Varianten eines Produkts zu erstellen, indem verschiedene Features aktiviert oder deaktiviert werden.

5\. Bessere Zusammenarbeit: Teams können an Modellen arbeiten und Änderungen vornehmen, ohne das gesamte Design neu zu erstellen.

Die featurebasierte Konstruktion ist eine weit verbreitete Methode in der Produktentwicklung und ermöglicht es Ingenieuren, komplexe Produkte effizient zu entwerfen und zu modellieren.


### Powerfeatures
Ja, "Powerfeatures" ist ein Begriff, der im Zusammenhang mit der featurebasierten Konstruktion in CAD (Computer-Aided Design) verwendet wird. Powerfeatures sind spezielle Features oder Merkmale, die in CAD-Software verwendet werden, um komplexe Geometrien oder Konstruktionsaufgaben zu bewältigen. Im Wesentlichen handelt es sich bei Powerfeatures um leistungsstarke, parametrische Modellierungswerkzeuge, die das Erstellen komplexer Strukturen oder Formen in CAD-Modellen erleichtern.

Powerfeatures können verschiedene Formen annehmen, abhängig von der spezifischen CAD-Software, werden jedoch oft verwendet, um Folgendes zu ermöglichen:

1\. \*\*Boolesche Operationen\*\*: Sie ermöglichen das Hinzufügen, Subtrahieren oder Schneiden von Geometrien, um komplexe Formen zu erstellen. Beispielsweise kann ein Powerfeature verwendet werden, um ein Loch in ein Objekt zu bohren oder zwei Teile miteinander zu verschmelzen.

2\. \*\*Muster und Arrays\*\*: Powerfeatures ermöglichen das Erstellen von Mustern oder Wiederholungen von Features, wie zum Beispiel das Anordnen von Schraubenlöchern in regelmäßigen Abständen.

3\. \*\*Kurven und Oberflächen\*\*: Sie können verwendet werden, um komplexere Kurven und Oberflächen zu generieren, die für die Erstellung von Freiformgeometrien oder ästhetisch ansprechenden Formen erforderlich sind.

4\. \*\*Parametrische Steuerungen\*\*: Powerfeatures erlauben die Verwendung von Parametern, um die Größe, Form und Position von Features in einem Modell zu steuern. Dies erleichtert die Anpassung und Aktualisierung von Modellen.

Die Verwendung von Powerfeatures in CAD-Software trägt dazu bei, den Konstruktionsprozess zu beschleunigen, Fehler zu minimieren und die Flexibilität bei der Modellierung zu erhöhen. Diese Funktionen sind besonders nützlich bei der Erstellung komplexer Baugruppen und Modelle in der Industrie, insbesondere in der Produktentwicklung und Fertigung.

<!-- -------------------------------------------------------------------------

                        Variantenkonstruktion & Coderegel

-------------------------------------------------------------------------- -->
### Variantenkonstruktion
Die Variantenkonstruktion ermöglicht es Unternehmen, Kunden eine größere Auswahl an Produkten anzubieten und dadurch ihre Wettbewerbsfähigkeit zu stärken. Durch die gezielte Anpassung an unterschiedliche Anforderungen können Unternehmen Kundenbedürfnisse besser erfüllen und ihre Marktposition verbessern.

Bei der Variantenkonstruktion werden verschiedene Versionen oder Modelle eines Produkts entwickelt, um den unterschiedlichen Anforderungen, Bedürfnissen oder Präferenzen der Kunden gerecht zu werden. Es können verschiedene Merkmale, Optionen oder Konfigurationen des Produkts variiert werden, um eine breite Palette von Varianten anzubieten.

Die Variantenkonstruktion basiert zumeist auf einem modularen Ansatz, bei dem verschiedene Baugruppen oder Komponenten verwendet werden, um die Variationen zu realisieren.

Da eine größere Anzahl von Varianten entwickelt und produziert wird, steigt auch die Komplexität in der Konstruktion und Produktion. Unternehmen müssen daher effektive Strategien und Tools zur Verwaltung dieser Komplexität einsetzen, um sicherzustellen, dass die Variantenkonstruktion wirtschaftlich und effizient bleibt.

#### Exkurs: Coderegel



### (Fertigungsabschnitts-)Zeichnungen 

Zeichungen nehmen im Konstruktionsprozess eine besondere Stellung ein (u.a. wg. Maße und Toleranzen). Neben den Zeichnungen des ferigen Produkts bilden Fertigungsabschnittszeichungen eines wichte Klasse von Zeichnungen, deren Bedeutung im Konstruktionsprozess nicht immer ausreichend gewürdigt wird.

::: {.callout-tip}
## Definition: *"Fertigungsabschnittszeichnung"*
Eine Fertigungsabschnittszeichnung ist eine technische Zeichnung oder ein Dokument, das in der Fertigung eines Produkts verwendet wird. Sie dient dazu, spezifische Informationen über einen bestimmten Abschnitt oder Prozess innerhalb der Fertigung eines Produkts darzustellen.
:::

Typischerweise enthält eine Fertigungsabschnittszeichnung Details wie Abmessungen, Toleranzen, Materialangaben und andere spezifische Anweisungen, die erforderlich sind, um einen bestimmten Fertigungsschritt durchzuführen. Diese Zeichnungen können Teil eines größeren Fertigungszeichnungssatzes sein, der alle erforderlichen Informationen für die Produktion eines Produkts enthält.

Fertigungsabschnittszeichnungen sind wichtig, um sicherzustellen, dass die Fertigung reibungslos verläuft und dass alle Teile oder Komponenten eines Produkts gemäß den vorgeschriebenen Standards hergestellt werden. Sie sind ein wichtiger Bestandteil des Qualitätssicherungsprozesses in der Fertigungsindustrie.

<!-- -------------------------------------------------------------------------

                        SIMULATION

-------------------------------------------------------------------------- -->

{{< include Simulation.qmd >}}

<!-- -------------------------------------------------------------------------

                        PRODUKTIONS- UND WERKSTOFFTECHNIK

-------------------------------------------------------------------------- -->

{{< include PWT.qmd >}}


{{< include Betriebsfestigkeit.qmd >}}

### Produktionsgerechte Produktgestaltung (PPG)

*„Design-to-manufacturing.“*

*Produktionsgerechte Produktgestaltung (PPG)*



<!-- -------------------------------------------------------------------------

                        DoE: Design of Experiments

-------------------------------------------------------------------------- -->

{{< include DesignofExperiments.qmd >}}


<!-- -------------------------------------------------------------------------

                        Dokumente bei der Produktentwicklung

-------------------------------------------------------------------------- -->
## Wichtige Dokumente bei der Produktentwicklung

### Non-Disclosure Agreement (NDA)

::: {.callout-tip}
## Definition: *"Non-Disclosure Agreement (NDA)"*
Ein "Non-Disclosure Agreement" (NDA) oder "Geheimhaltungsvereinbarung" ist ein rechtliches Dokument, das im Geschäftsbereich verwendet wird, um vertrauliche Informationen und Daten zu schützen, die im Rahmen von Entwicklungsaktivitäten, Verhandlungen oder anderen geschäftlichen Transaktionen ausgetauscht werden.
:::

Ein NDA regelt die Bedingungen, unter denen vertrauliche Informationen offengelegt werden dürfen und wie diese Informationen von den beteiligten Parteien verwendet werden können. Sie dient dazu, sicherzustellen, dass sensible Informationen, wie zum Beispiel Geschäftsgeheimnisse, technische Daten, Strategien, Pläne oder andere vertrauliche Informationen, nicht unbefugt offengelegt oder für unerwünschte Zwecke genutzt werden.

Typischerweise umfasst eine NDA folgende Punkte:

1. **Definierte vertrauliche Informationen**: Eine genaue Beschreibung der Arten von Informationen, die als vertraulich betrachtet werden und geschützt werden müssen.

2. **Parteien der Vereinbarung**: Die beteiligten Parteien, die die Vertraulichkeitsvereinbarung unterzeichnen, sowie ihre Pflichten und Verantwortlichkeiten in Bezug auf den Schutz vertraulicher Informationen.

3. **Verwendungszweck der Informationen**: Die Zwecke, für die die vertraulichen Informationen offengelegt werden und wie sie von der empfangenden Partei genutzt werden dürfen.

4. **Dauer der Vertraulichkeit**: Die Dauer, für die die Vertraulichkeitspflichten gelten, sowie Bestimmungen darüber, was nach Ablauf der Vereinbarung mit den vertraulichen Informationen geschehen soll.

5. **Haftung und Rechtsbehelfe**: Bestimmungen darüber, wie Verstöße gegen die NDA geahndet werden und welche Rechtsbehelfe zur Verfügung stehen, falls eine Partei gegen die Bestimmungen der Vereinbarung verstößt.

Die NDA ist ein wichtiges Instrument, um den Schutz von geistigem Eigentum und vertraulichen Informationen während des Geschäftsprozesses zu gewährleisten und das Vertrauen zwischen den beteiligten Parteien zu stärken. Sie wird in verschiedenen Bereichen eingesetzt, wie beispielsweise bei der Zusammenarbeit mit externen Partnern, Zulieferern, Kunden, Investoren oder anderen Geschäftspartnern, bei denen der Schutz sensibler Informationen von entscheidender Bedeutung ist.


<!-- -------------------------------------------------------------------------

                        Product Lifecycle Management (PLM)

-------------------------------------------------------------------------- -->

## PLM
Product Lifecycle Management (PLM) ist ein umfassender Ansatz zur Verwaltung aller Informationen, Daten und Prozesse, die während des gesamten Lebenszyklus eines Produkts anfallen, von der Konzeption und Entwicklung bis hin zur Fertigung, Vermarktung, Nutzung und Wartung. Die wichtigsten Merkmale von PLM-Systemen sind:

1. **Zentrale Datenverwaltung**: PLM-Systeme bieten eine zentrale und konsolidierte Datenbank, in der alle produktbezogenen Informationen gespeichert sind. Dies umfasst Konstruktionszeichnungen, Stücklisten, Produktlebenszyklusdaten, technische Spezifikationen, Änderungsverwaltungsdokumente und mehr.

2. **Versionskontrolle**: PLM-Systeme ermöglichen die Verwaltung von Versionen und Revisionen von Produktdaten. Dies ist entscheidend, um Änderungen im Laufe der Zeit zu verfolgen und sicherzustellen, dass alle Benutzer auf die aktuellsten Daten zugreifen.

3. **Änderungsmanagement**: PLM-Systeme unterstützen den Prozess der Genehmigung, Verfolgung und Umsetzung von Designänderungen und -modifikationen. Dies ermöglicht eine systematische Verwaltung von Änderungsanträgen und -prozessen.

4\. \*\*BOM-Verwaltung:\*\* Die Verwaltung von Stücklisten (Bill of Materials, BOM) ist ein Kernmerkmal von PLM-Systemen. Es ermöglicht die Erstellung, Pflege und Analyse von Produktstrukturen.

5\. \*\*Workflow-Management:\*\* PLM-Systeme bieten Tools zur Definition und Verwaltung von Arbeitsabläufen und Prozessen, die im Produktentwicklungszyklus durchgeführt werden müssen. Dies erleichtert die Zusammenarbeit und die Einhaltung von Verfahren.

6\. \*\*Dokumentenverwaltung:\*\* PLM-Systeme bieten Funktionen zur Verwaltung von Dokumenten, technischen Zeichnungen, Berichten und anderen Dateien, die im Produktentwicklungsprozess verwendet werden.

7\. \*\*Ressourcenmanagement:\*\* PLM-Systeme unterstützen die Zuweisung von Ressourcen, einschließlich Arbeitskräften, Materialien und Maschinen, um sicherzustellen, dass die Entwicklung und Fertigung reibungslos verläuft.

8\. \*\*Qualitätsmanagement:\*\* Die Einhaltung von Qualitätsstandards und -prozessen ist in PLM-Systemen integriert. Dies umfasst die Qualitätskontrolle, Prüfung und Nachverfolgung von Produkten.

9\. \*\*Rückverfolgbarkeit:\*\* PLM-Systeme ermöglichen die Rückverfolgbarkeit von Produktdaten und Änderungen im Laufe der Zeit. Dies ist wichtig für Compliance-Anforderungen und das Risikomanagement.

10\. \*\*Integration:\*\* PLM-Systeme sind oft in andere Unternehmenssysteme wie Enterprise Resource Planning (ERP), Customer Relationship Management (CRM) und Manufacturing Execution Systems (MES) integriert, um nahtlose Datenflüsse und Prozesse zu gewährleisten.

11\. \*\*Analytik und Berichterstattung:\*\* PLM-Systeme bieten Tools zur Analyse von Produktleistungsdaten und zur Erstellung von Berichten, die für die Entscheidungsfindung und die Produktverbesserung verwendet werden können.

12\. \*\*Sicherheit und Zugriffskontrolle:\*\* Der Schutz von sensiblen Produktinformationen und die Kontrolle des Zugriffs auf diese Daten sind wesentliche Merkmale von PLM-Systemen.

13\. \*\*Collaboration und Kommunikation:\*\* PLM-Systeme fördern die Zusammenarbeit zwischen verschiedenen Teams und Abteilungen, indem sie Kommunikationstools und gemeinsame Arbeitsplattformen bereitstellen.

Diese Merkmale machen PLM-Systeme zu leistungsstarken Werkzeugen für die Produktentwicklung, die die Effizienz steigern, Fehler reduzieren, die Qualität verbessern und die Zeit bis zur Markteinführung verkürzen können. Sie sind besonders in Branchen wie der Fertigung, der Automobilindustrie, der Luft- und Raumfahrt und der Medizintechnik weit verbreitet.

#### PLM-Systeme

Es gibt zahlreiche PLM-Systeme (Product Lifecycle Management), die in verschiedenen Branchen und Unternehmen eingesetzt werden. Verbreitete PLM-Systeme sind (unvollständige Auswahl):

1\. \*\*Siemens Teamcenter:\*\* Teamcenter von Siemens ist eine weit verbreitete PLM-Plattform, die umfassende Funktionen für das Produktlebenszyklusmanagement bietet. Es unterstützt Produktentwicklung, Anforderungsmanagement, Änderungskontrolle, Qualitätsmanagement und mehr.

2\. \*\*Dassault Systèmes CATIA:\*\* CATIA ist ein Teil von Dassault Systèmes' 3DEXPERIENCE-Plattform und bietet fortschrittliche CAD- und PLM-Funktionen für die Produktentwicklung und Konstruktion.

3\. \*\*PTC Windchill:\*\* Windchill von PTC ist ein umfassendes PLM-System, das Produktentwicklung, Qualitätsmanagement, Dokumentenverwaltung und Zusammenarbeit unterstützt.

4\. \*\*Autodesk Fusion Lifecycle:\*\* Dies ist ein cloudbasiertes PLM-System von Autodesk, das auf die Verwaltung des gesamten Produktlebenszyklus ausgerichtet ist, von der Idee bis zur Herstellung.

5\. \*\*Aras Innovator:\*\* Aras bietet eine offene, erweiterbare PLM-Plattform namens Innovator, die Anpassungen und Integrationen erleichtert.

6\. \*\*PTC Creo:\*\* Neben seiner CAD-Funktionalität bietet PTC Creo auch PLM-Funktionen, die die Produktentwicklung und -verwaltung unterstützen.

7\. \*\*Oracle Agile PLM:\*\* Oracle bietet eine PLM-Lösung namens Agile PLM, die die Produktentwicklung, Änderungskontrolle, Qualitätsmanagement und Zusammenarbeit unterstützt.

8\. \*\*Arena PLM:\*\* Arena Solutions bietet eine cloudbasierte PLM-Plattform, die sich auf die Zusammenarbeit und Dokumentenverwaltung im Produktlebenszyklus konzentriert.

9\. \*\*SAP PLM:\*\* SAP bietet eine PLM-Lösung, die in sein breiteres Portfolio integriert ist und Produktentwicklung, Produktlebenszyklusdaten und Compliance-Management unterstützt.

10\. \*\*Teamcenter von PTC:\*\* Dies ist eine PLM-Lösung, die umfassende Funktionen für das Produktdatenmanagement und die Zusammenarbeit bietet.

Diese Beispiele zeigen die Vielfalt der verfügbaren PLM-Systeme, von cloudbasierten Lösungen bis hin zu umfassenden PLM-Plattformen. Die Wahl des richtigen PLM-Systems hängt von den spezifischen Anforderungen Ihres Unternehmens, Ihrer Branche und Ihrer Produktentwicklungsprozesse ab. Es ist wichtig, sorgfältig zu prüfen, welches System am besten zu Ihren Bedürfnissen passt.

<!-- -------------------------------------------------------------------------

                       Weiterführende Links

-------------------------------------------------------------------------- -->

Weiterführende Links:

- [Siemens Teamcenter PLM-Software](https://plm.sw.siemens.com/de-DE/teamcenter/)
- [Dassault Systèmes Product Lifecycle Management](https://www.3ds.com/products/product-lifecycle-management)




Im Bereich der Softwareentwicklung gibt es kein 1:1-Gegenstück zu CAD-Systemen, jedoch gibt es ähnliche Konzepte und Systeme im Bereich der Softwareentwicklung, die in gewisser Weise mit PLM-Systemen (Product Lifecycle Management) vergleichbar sind. Diese Systeme werden oft als Application Lifecycle Management (ALM) oder Software Development Lifecycle Management (SDLCM) bezeichnet. Beispiel hierfür:

1\. \*\*Application Lifecycle Management (ALM):\*\* ALM-Systeme sind darauf ausgerichtet, den gesamten Lebenszyklus einer Softwareanwendung zu verwalten, von der Ideenfindung und Anforderungsdefinition über die Entwicklung, Qualitätssicherung, Bereitstellung bis hin zur Wartung und Aktualisierung. Sie ähneln PLM-Systemen in Bezug auf das Lifecycle-Management, die Dokumentation und die Versionskontrolle von Software.

2\. \*\*Software Configuration Management (SCM):\*\* SCM-Systeme konzentrieren sich auf die Verwaltung von Änderungen am Quellcode und anderen Softwareartefakten. Sie bieten Funktionen zur Versionskontrolle, Konfigurationsverwaltung und zur Steuerung von Änderungen im Entwicklungsprozess.

3\. \*\*Continuous Integration/Continuous Delivery (CI/CD):\*\* CI/CD-Pipelines und -Plattformen unterstützen die Automatisierung von Build-, Test- und Bereitstellungsprozessen in der Softwareentwicklung. Sie können als Teil eines umfassenderen Software-Lifecycle-Managementsystems betrachtet werden.

4\. \*\*Requirements Management:\*\* Ähnlich wie PLM-Systeme zur Verwaltung von Produktanforderungen bieten Requirements-Management-Tools die Möglichkeit, Anforderungen an Softwareprojekte zu erfassen, zu verfolgen und zu verwalten.

5\. \*\*Testmanagement:\*\* Testmanagement-Tools unterstützen die Planung, Durchführung und Berichterstattung über Softwaretests und Qualitätssicherungsaktivitäten während des Softwareentwicklungsprozesses.

6\. \*\*DevOps-Plattformen:\*\* DevOps-Plattformen integrieren die Entwicklung (Dev) und den Betrieb (Ops) von Software und ermöglichen die kontinuierliche Bereitstellung und Aktualisierung von Anwendungen. Sie sind auf die Automatisierung und Zusammenarbeit im gesamten Softwareentwicklungslebenszyklus ausgerichtet.

7\. \*\*Agile Project Management:\*\* Agile Projektmanagement-Tools unterstützen agile Entwicklungsmethoden wie Scrum oder Kanban und ermöglichen die Planung, Verfolgung und Zusammenarbeit in agilen Teams.

8\. \*\*Dokumentations- und Wissensmanagement:\*\* Ähnlich wie bei der Dokumentenverwaltung in PLM-Systemen bieten Tools für Dokumentations- und Wissensmanagement in der Softwareentwicklung die Möglichkeit, Entwicklungsartefakte, Dokumentation und Wissen zu speichern und zu teilen.

9\. \*\*DevSecOps:\*\* Dies ist eine Erweiterung von DevOps, die Sicherheitsaspekte in den gesamten Softwareentwicklungsprozess integriert. Es konzentriert sich auf die Sicherheit von Anwendungen während ihres gesamten Lebenszyklus.

Diese Systeme und Konzepte dienen dazu, den Softwareentwicklungsprozess effizienter, transparenter und besser steuerbar zu machen, ähnlich wie PLM-Systeme in der Produktentwicklung. Die Wahl des richtigen Systems hängt von den spezifischen Anforderungen Ihres Softwareentwicklungsprojekts und den verwendeten Methoden ab.


## Single Point of Truth (SPOoT)
"Single Point of Truth" (SPOoT) ist ein Begriff, der in der Informationstechnologie und im Datenmanagement verwendet wird. Er bezieht sich auf die Idee, dass es in einem System oder einer Organisation eine einzige, zuverlässige Quelle für bestimmte Daten oder Informationen geben sollte. Diese einzige Quelle wird als "Single Point of Truth" bezeichnet und dient als Referenzpunkt, auf den alle Benutzer und Systeme zugreifen, um sicherzustellen, dass die Informationen konsistent und aktuell sind.

Die Idee hinter dem "Single Point of Truth" besteht darin, Dateninkonsistenzen und -fehler zu minimieren, die auftreten können, wenn verschiedene Abteilungen oder Systeme unterschiedliche Versionen derselben Daten speichern und verwenden. Durch die Festlegung einer einzigen vertrauenswürdigen Quelle für diese Daten wird die Genauigkeit und Konsistenz gewährleistet, da alle anderen Kopien oder Darstellungen auf diese zentrale Quelle verweisen.

Beispiele für den Einsatz des "Single Point of Truth" können sein:

1. **Kundeninformationen**: In einem Unternehmen kann es eine zentrale Datenbank mit Kundeninformationen geben, auf die alle Abteilungen zugreifen. Dies stellt sicher, dass jeder Zugriff auf die aktuellsten und genauesten Kundendaten hat.

2. **Produktdaten**: In einem E-Commerce-Unternehmen kann es eine zentrale Produktkatalogdatenbank geben, die von der Website, Lagerverwaltung, Verkauf und anderen Systemen gemeinsam genutzt wird, um sicherzustellen, dass Produktinformationen konsistent sind.

3. **Finanzdaten**: In einer Organisation können Finanzdaten in einem einzigen Buchhaltungssystem gespeichert werden, auf das alle relevanten Abteilungen und Stakeholder zugreifen, um Finanzberichte und Analysen zu erstellen.

Die Umsetzung des "Single Point of Truth" erfordert eine klare Datenverwaltungsstrategie, Data-Governance-Richtlinien und oft den Einsatz von Datenbanken oder Datenverwaltungssystemen, um die Daten zentral zu speichern und sicherzustellen, dass sie für alle relevanten Parteien zugänglich sind. Dies trägt dazu bei, die Qualität der Daten zu verbessern, die Effizienz der Organisation zu steigern und fundierte Entscheidungen auf verlässlichen Informationen zu basieren.

--> Siehe GitLab!!!



### SPOoT BEI PLM
Das Konzept des "Single Point of Truth" (SPOOT) ist in PLM-Systemen (Product Lifecycle Management) von großer Bedeutung. PLM-Systeme sind spezialisierte Softwarelösungen, die entwickelt wurden, um den gesamten Lebenszyklus eines Produkts zu verwalten, angefangen von der Konzeption und Entwicklung bis hin zur Fertigung, Vermarktung und Wartung. In diesem Kontext bezieht sich SPOOT auf die Idee, dass es in einem PLM-System eine einzige, zentrale und vertrauenswürdige Datenquelle für alle produktbezogenen Informationen geben sollte.

Die Bedeutung des SPOOT-Konzepts in PLM-Systemen umfasst:

1\. \*\*Datenkonsistenz:\*\* Ein PLM-System enthält eine Vielzahl von produktbezogenen Informationen, darunter Konstruktionszeichnungen, Spezifikationen, Stücklisten, Änderungsverwaltungsdokumente, Produktlebenszyklusdaten und mehr. Die Gewährleistung von Datenkonsistenz und -integrität ist von entscheidender Bedeutung, um Fehler und Inkonsistenzen zu vermeiden, die zu Produktionsproblemen oder Qualitätsmängeln führen könnten.

2\. \*\*Zugriffskontrolle und Sicherheit:\*\* Durch die Festlegung eines SPOOT in einem PLM-System können Zugriffsrechte und Sicherheitsmaßnahmen besser verwaltet werden. Dies ist wichtig, um sicherzustellen, dass nur autorisierte Benutzer auf bestimmte Arten von Daten zugreifen können, insbesondere wenn es um vertrauliche oder geschützte Informationen geht.

3\. \*\*Effizienz:\*\* Ein SPOOT ermöglicht es den Benutzern, schnell auf die benötigten Informationen zuzugreifen, ohne Zeit mit der Suche nach den neuesten Daten oder der Überprüfung von verschiedenen Quellen zu verschwenden. Dies erhöht die Effizienz der Produktentwicklung und -verwaltung.

4\. \*\*Versionskontrolle und Änderungsverfolgung:\*\* Ein SPOOT in einem PLM-System bietet eine klare Versionskontrolle und ermöglicht die Verfolgung von Änderungen im Laufe der Zeit. Dies ist entscheidend für die Rückverfolgbarkeit von Designänderungen und die Dokumentation des Produktlebenszyklus.

5\. \*\*Einheitliche Datenansicht:\*\* Mit einem SPOOT erhalten alle Benutzer im Unternehmen eine einheitliche Sicht auf produktbezogene Informationen. Dies fördert die Zusammenarbeit zwischen verschiedenen Abteilungen und Stakeholdern, da alle auf die gleichen Daten zugreifen.

6\. \*\*Compliance und Auditfähigkeit:\*\* In einigen Branchen, wie der Luft- und Raumfahrt oder der Medizintechnik, sind strenge Vorschriften und Compliance-Anforderungen zu erfüllen. Ein SPOOT hilft bei der Einhaltung dieser Vorschriften, da er eine klare und nachvollziehbare Verwaltung von produktbezogenen Daten ermöglicht.

Insgesamt ist das SPOOT-Konzept in PLM-Systemen entscheidend, um sicherzustellen, dass Produktinformationen zuverlässig, aktuell und konsistent sind. Dies trägt dazu bei, Produktentwicklung und -verwaltung effektiver und effizienter zu gestalten und die Qualität der hergestellten Produkte zu gewährleisten.


## GitHub
GitHub ist eine Plattform und ein System, das sich auf die Verwaltung von Quellcode und Softwareentwicklungsprojekten konzentriert. Es handelt sich um ein Versionskontrollsystem (VCS), das auf Git basiert. GitHub bietet eine Vielzahl von Funktionen, die Entwicklern und Entwicklungsteams dabei helfen, Quellcode zu hosten, zu verwalten, zu teilen und zusammenzuarbeiten. Hier sind einige der Hauptfunktionen von GitHub:

1\. Versionskontrolle: GitHub verwendet das Git-Protokoll, um Versionskontrolle für Quellcode und Dateien bereitzustellen. Dies ermöglicht Entwicklern, Änderungen am Code nachzuverfolgen, zu verwalten und zusammenzuführen.

2\. Repository-Verwaltung: GitHub bietet die Möglichkeit, Repositories (auch als "Repos" bezeichnet) zu erstellen, in denen Entwickler ihren Quellcode und ihre Projektdateien speichern können. Diese Repositories können öffentlich oder privat sein.

3\. \*\*Collaboration-Tools:\*\* GitHub ermöglicht es Entwicklern, an Projekten zusammenzuarbeiten, indem sie Pull Requests erstellen, Kommentare hinterlassen und Änderungen diskutieren. Dies erleichtert die Zusammenarbeit in verteilten oder globalen Entwicklungsteams.

4\. \*\*Issues und Bug-Tracking:\*\* GitHub ermöglicht die Erstellung von Issues, um Fehler zu melden, Funktionen vorzuschlagen oder Aufgaben zuzuweisen. Entwickler können Issues verfolgen und diskutieren, um Probleme zu lösen.

5\. \*\*Branching und Merging:\*\* Entwickler können Branches erstellen, um an neuen Funktionen oder Fehlerbehebungen zu arbeiten, und diese Branches dann in den Hauptzweig (in der Regel "master" genannt) zusammenführen, wenn die Arbeit abgeschlossen ist.

6\. \*\*Continuous Integration (CI) und Continuous Deployment (CD):\*\* GitHub bietet Integrationen mit CI/CD-Tools, um die automatische Erstellung, Tests und Bereitstellung von Anwendungen zu unterstützen.

7\. \*\*Code-Überprüfung:\*\* GitHub ermöglicht es Entwicklern, den Code ihrer Kollegen zu überprüfen, Kommentare zu hinterlassen und Änderungen zu genehmigen oder abzulehnen.

8\. \*\*Projektmanagement:\*\* GitHub bietet Projektmanagement-Tools, mit denen Entwicklerteams ihre Arbeit organisieren und priorisieren können.

9\. \*\*Gemeinschaft und soziales Netzwerk:\*\* GitHub hat eine große Entwicklergemeinschaft und bietet soziale Funktionen wie das Folgen von Benutzern und das Sternen von Repositories, um Interaktionen und Zusammenarbeit zu fördern.

10\. \*\*API und Integrationen:\*\* GitHub bietet eine API, die es ermöglicht, GitHub in andere Entwicklungstools und Systeme zu integrieren.

GitHub wird von Einzelpersonen, Open-Source-Projekten und Unternehmen auf der ganzen Welt genutzt, um die Softwareentwicklung zu erleichtern, den Quellcode zu verwalten und die Zusammenarbeit in Entwicklerteams zu fördern. Es hat einen signifikanten Einfluss auf die Art und Weise, wie Software entwickelt und verwaltet wird.

#### HINTERGRUND: GiT

Git ist ein weit verbreitetes verteiltes Versionskontrollsystem (VCS) und ein Open-Source-Softwareprojekt. Es wurde von Linus Torvalds, dem Erfinder des Linux-Betriebssystems, entwickelt und ist heute eines der am häufigsten verwendeten Versionskontrollsysteme in der Softwareentwicklung. Git bildet die Grundlage für viele VCS-Dienste und Plattformen, darunter GitHub, GitLab und Bitbucket. Hier sind einige wichtige Informationen zu Git:

\*\*1. Dezentralisiertes Versionskontrollsystem:\*\* Git ist ein dezentralisiertes Versionskontrollsystem, was bedeutet, dass es keine zentrale Codebasis oder einen einzigen Repository-Server gibt. Jeder Entwickler hat eine vollständige Kopie des Repositorys auf seinem lokalen Rechner, was die Zusammenarbeit und das Arbeiten in verteilten Teams erleichtert.

\*\*2. Schnelligkeit und Effizienz:\*\* Git ist bekannt für seine Geschwindigkeit und Effizienz. Es ermöglicht schnelle Operationen wie das Erstellen von Branches, das Zusammenführen von Änderungen und das Zurückverfolgen von Dateiversionen.

\*\*3. Branching und Merging:\*\* Git erleichtert das Erstellen von Branches, um an verschiedenen Funktionen oder Fehlerbehebungen gleichzeitig zu arbeiten. Entwickler können Änderungen in separate Branches durchführen und dann diese Branches miteinander verschmelzen, um sie in den Hauptzweig zu integrieren.

\*\*4. Geschichte und Commit-Verfolgung:\*\* Git speichert die gesamte Versionsgeschichte des Projekts und ermöglicht es den Entwicklern, zu einem beliebigen Zeitpunkt zurückzukehren und den Zustand des Codes zu überprüfen. Jeder Commit (Änderung) ist eindeutig identifizierbar und nachverfolgbar.

\*\*5. Staging-Area:\*\* Git verwendet eine sogenannte Staging-Area, auf der Entwickler Änderungen vor dem Commit überprüfen und auswählen können. Dies ermöglicht eine präzise Kontrolle über den Commit-Prozess.

\*\*6. Integrität und Sicherheit:\*\* Git verwendet kryptografische Prüfsummen (SHA-1-Hashes) für jede Datei und jeden Commit, um die Integrität der Daten sicherzustellen. Dadurch werden Datenfehler und Beschädigungen vermieden.

\*\*7. Open Source und weit verbreitet:\*\* Git ist eine Open-Source-Software und steht kostenlos zur Verfügung. Es wird von einer großen Gemeinschaft von Entwicklern unterstützt und ist auf nahezu allen Betriebssystemen verfügbar.

\*\*8. Integration in Entwicklungstools:\*\* Git ist in eine Vielzahl von Entwicklungsumgebungen und Tools integriert. Es kann nahtlos in IDEs (Integrated Development Environments) und CI/CD-Pipelines (Continuous Integration/Continuous Deployment) eingebunden werden.

\*\*9. GitHub, GitLab und Bitbucket:\*\* Git wird oft in Verbindung mit Plattformen wie GitHub, GitLab und Bitbucket verwendet, die eine webbasierte Benutzeroberfläche und kollaborative Funktionen bieten, um die Entwicklung und das Code-Management zu vereinfachen.

\*\*10. Git-Protokoll:\*\* Git verwendet das Git-Protokoll für die Kommunikation zwischen Repositories und Servern. Dieses Protokoll ermöglicht es Entwicklern, ihre Änderungen an entfernte Repositories zu übertragen und zu synchronisieren.

Insgesamt bietet Git eine leistungsstarke und flexible Möglichkeit, Quellcode zu verwalten und die Zusammenarbeit in Softwareentwicklungsteams zu erleichtern. Es hat die Art und Weise, wie Software entwickelt wird, grundlegend verändert und ist ein wesentlicher Bestandteil moderner Entwicklungspraktiken geworden.


